{"version":3,"sources":["webpack:///src/app/webServices/client-web-service.service.ts","webpack:///src/app/pages/client/recherche-client/recherche-client.page.html","webpack:///src/app/pages/client/recherche-client/recherche-client.module.ts","webpack:///src/app/pages/client/recherche-client/recherche-client-routing.module.ts","webpack:///src/app/pages/client/recherche-client/recherche-client.page.scss","webpack:///src/app/pages/client/recherche-client/recherche-client.page.ts"],"names":["ClientWebServiceService","http","httpOptions","headers","get","providedIn","RechercheClientPageModule","imports","declarations","providers","routes","path","component","RechercheClientPageRoutingModule","forChild","exports","RechercheClientPage","ServiceService","client","getdata","getData","subscribe","data","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAKaA,uBAAuB;AAElC,yCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AACpB,eAAAC,WAAA,GAAc;AACZC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,8BAAgB;AADO,aAAhB;AADG,WAAd;AADyC;;AAFP;AAAA;AAAA,oCAQxB;AAER,mBAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,SAAd,CAAP;AACD;AAXiC;;AAAA;AAAA,S;;;;gBAJ3B;;;;AAIIJ,6BAAuB,6DAHnC,iEAAW;AACVK,kBAAU,EAAE;AADF,OAAX,CAGmC,GAAvBL,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACLb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC0BFM,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAXrC,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,iGALO,CADD;AAQRC,oBAAY,EAAE,CAAC,0EAAD,CARN;AASRC,iBAAS,EAAE,CAAC,+FAAD;AATH,OAAT,CAWqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBb,UAAMI,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,gCAAgC;AAAA;AAAA,O;;AAAhCA,sCAAgC,6DAJ5C,+DAAS;AACRN,eAAO,EAAE,CAAC,6DAAaO,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI4C,GAAhCF,gCAAgC,CAAhC;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUFG,mBAAmB;AAI9B,qCAAoBC,cAApB,EAA6D;AAAA;;AAAzC,eAAAA,cAAA,GAAAA,cAAA;AAFb,eAAAC,MAAA,GAAS,EAAT;AAEyD;;AAJlC;AAAA;AAAA,qCAOtB;AACN,iBAAKC,OAAL;AAED;AAV6B;AAAA;AAAA,oCAWpB;AAAA;;AACR,iBAAKF,cAAL,CAAoBG,OAApB,GAA8BC,SAA9B,CAAwC,UAACC,IAAD,EAAiB;AACvD,mBAAI,CAACJ,MAAL,GAAcI,IAAd;AACD,aAFD;AAGD;AAf6B;;AAAA;AAAA,S;;;;gBAPvB;;;;AAOIN,yBAAmB,6DAL/B,gEAAU;AACTO,gBAAQ,EAAE,sBADD;AAETC,gBAAQ,EAAR,8EAFS;;AAAA,OAAV,CAK+B,GAAnBR,mBAAmB,CAAnB","file":"pages-client-recherche-client-recherche-client-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientWebServiceService {\n\n  constructor(private http: HttpClient) { }\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n  getData() {\n\n    return this.http.get('/Client');\n  }  \n\n}\n","export default \"\\n    <ion-card>\\n        <ion-card-header>\\n         <h3>Rechercher client</h3>   \\n        </ion-card-header>\\n        <hr class=\\\"solid\\\">\\n        <ion-card-content>\\n            <ion-grid>\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-input placeholder=\\\"Nom du client\\\"></ion-input>\\n                    </ion-col>\\n                    <ion-col>\\n                    <div class=\\\"container-image\\\">\\n                      <div class=\\\"enregistrer\\\">\\n                          <ion-button color=\\\"success\\\">Rechercher</ion-button>\\n                      </div>\\n                    </div>\\n                    </ion-col>\\n        \\n                </ion-row>\\n\\n              </ion-grid>\\n\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card>\\n        <ion-card-header>\\n            <h2>Resultat</h2>   \\n           </ion-card-header>\\n        <ion-card-content>\\n            <ion-grid>\\n                <ion-row>\\n                    <ion-col>Nom</ion-col>\\n                    <ion-col>Prenom</ion-col>\\n                    <ion-col>Date-cr√©ation</ion-col>\\n                    <ion-col>Date-modification</ion-col>\\n                    <ion-col>Commercial</ion-col>\\n                    <ion-col>Actif</ion-col>\\n                </ion-row>\\n                <ion-row *ngFor=\\\"let cli of client\\\">\\n                    <ion-col>\\n                        <ion-label center text-center>{{cli.clientNom}}</ion-label>\\n                    </ion-col>\\n                    <ion-col>\\n                        <ion-label center text-center>{{cli.clientPrenom}}</ion-label>\\n                    </ion-col>\\n                    <ion-col>\\n                        <ion-label center text-center>{{cli.clientDateCrea}}</ion-label>\\n                    </ion-col>\\n                    <ion-col>\\n                        <ion-label center text-center>{{cli.clientDateModif}}</ion-label>\\n                    </ion-col>\\n                    <ion-col>\\n                        <ion-label center text-center>{{cli.clientNom}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-grid>\\n        </ion-card-content>\\n    </ion-card>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RechercheClientPageRoutingModule } from './recherche-client-routing.module';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ClientWebServiceService } from './../../../webServices/client-web-service.service'; \n\nimport { RechercheClientPage } from './recherche-client.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HttpClientModule,\n    RechercheClientPageRoutingModule\n  ],\n  declarations: [RechercheClientPage],\n  providers: [ClientWebServiceService]\n})\nexport class RechercheClientPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RechercheClientPage } from './recherche-client.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RechercheClientPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RechercheClientPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NsaWVudC9yZWNoZXJjaGUtY2xpZW50L3JlY2hlcmNoZS1jbGllbnQucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ClientWebServiceService } from './../../../webServices/client-web-service.service'; \n\n@Component({\n  selector: 'app-recherche-client',\n  templateUrl: './recherche-client.page.html',\n  styleUrls: ['./recherche-client.page.scss','./../../../app.component.scss'],\n})\nexport class RechercheClientPage implements OnInit {\n\n  public client = [];\n\n  constructor(private ServiceService: ClientWebServiceService) { }\n  data: any;\n\n  ngOnInit(): void {\n    this.getdata();\n\n  }\n  getdata() {\n    this.ServiceService.getData().subscribe((data: any[]) => {\n      this.client = data;\n    })\n  }\n}\n"]}